// Do not edit this file; automatically generated by build.py.
'use strict';

this.IS_NODE_JS = !!(typeof module !== 'undefined' && module.exports);

this.EDITOR_DIR = (function (root) {
    if (!root.IS_NODE_JS) {
        // Find name of current directory.
        var scripts = document.getElementsByTagName('script');
        var re = new RegExp('(.+)[\/]base.js$');
        for (var i = 0, script; script = scripts[i]; i++) {
            var match = re.exec(script.src);
            if (match) {
                return match[1];
            }
        }
        alert('Could not detect Editor\'s directory name.');
    }
    return '';
})(this);

this.EDITOR_BOOT = function (root) {
    if (root.IS_NODE_JS) {
        //require('google-closure-library');
    } else if (typeof goog == 'undefined') {
        alert('Error: Closure not found.  Read this:\n' +
            'developers.google.com/blockly/guides/modify/web/closure');
    }

    var dir = 'editor';
    // Execute after Closure has loaded.
    goog.addDependency('../../../../js/' + dir + '/editor.js', ['Editor'], []);
    goog.addDependency('../../../../js/' + dir + '/project.js', ['Editor.Project'], ['Blockly.utils']);
    goog.addDependency('../../../../js/' + dir + '/configuration.js', ['Editor.Configuration'], ['Blockly.utils']);
    goog.addDependency('../../../../js/' + dir + '/task.js', ['Editor.Task'], ['Blockly.utils']);
    goog.addDependency('../../../../js/' + dir + '/program.js', ['Editor.Program'], ['Blockly.utils']);
    goog.addDependency('../../../../js/' + dir + '/function.js', ['Editor.Function'], ['Blockly.utils']);
    goog.addDependency('../../../../js/' + dir + '/function_block.js', ['Editor.FunctionBlock'], ['Blockly.utils']);

    // Load Editor.
    goog.require('Editor');
    goog.require('Editor.Project');
    goog.require('Editor.Configuration');
    goog.require('Editor.Task');
    goog.require('Editor.Program');
    goog.require('Editor.Function');
    goog.require('Editor.FunctionBlock');

    delete root.EDITOR_DIR;
    delete root.EDITOR_BOOT;
    delete root.IS_NODE_JS;
};
if (this.IS_NODE_JS) {
    this.BLOCKLY_BOOT(this);
    module.exports = Blockly;
} else {
    // Delete any existing Closure (e.g. Soy's nogoog_shim).
    //document.write('<script>var goog = undefined;</script>');
    // Load fresh Closure Library.
    //document.write('<script src="' + this.BLOCKLY_DIR +
    //    '/../closure-library/closure/goog/base.js"></script>');
    document.write('<script>this.EDITOR_BOOT(this);</script>');
}

